---
layout: post
title:  "First Post"
date:   2020-05-14 00:00:00 -0600
categories: news front-end
---

This is my first post using jekyll and github pages. I initally went with [Minimal Mistakes](https://github.com/mmistakes/minimal-mistakes) for my layout to show my friend the capabilities of this type of site, but that comes with a lot more features than I need.

# jQuery

jQuery is not my favorite tool. It's really powerful but it's also heavy, and most sites can replace it with vanilla JS. [Here](https://github.blog/2018-09-06-removing-jquery-from-github-frontend/) is a good read on how github migrated off jQuery.

# Markdown

Markdown is great, it's almost [WYSIWYG](https://en.wikipedia.org/wiki/WYSIWYG) but without all the issues.

It supports inline html, I'll write a script right now:

<script>
  const f = () => {
    const d = document.querySelector("#test");
    d.textContent = `Random number: ${Math.round(Math.random() * 100)}`;
    d.style.color = d.style.color === "red" ? "blue" : "red";
    setTimeout(f, 5000);
  }
  window.onload = () => f();
</script>

<div id="test">Watch</div>

That's easy.

```html
<script>
  const f = () => {
    const d = document.querySelector("#test");
    d.textContent = `Random number: ${Math.random() * 100}`;
    d.style.color = d.style.color === "red" ? "blue" : "red";
    setTimeout(f, 5000);
  }
  window.onload = () => f();
</script>

<div id="test">Watch</div>
```
Note the [ES6 Syntax](http://www.ecma-international.org/ecma-262/6.0/index.html). We should no longer be shackled by IE 8.


Markdown generates ids for headers, making it <a href="#markdown">Easy to link</a>.

# Process

I have my github repo checked out on my [Windows Linux Subsystem](https://docs.microsoft.com/en-us/windows/wsl/install-win10) (ubuntu). I am using the [Remote WSL VSCode extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl) to edit my posts. I have a markdown preview up on the right of my editor and I'm running `bundle exec jekyll serve` so that I can see changes live as I save the page.

## Gotchas

Running this before `bundle install` allows nokogiri to work with native extensions:
```shell
sudo apt-get install build-essential ruby-dev zlib1g-dev liblzma-dev
```
